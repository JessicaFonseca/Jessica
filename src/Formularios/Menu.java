/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Utilitários.ConexaoDB;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jéssica
 */
public class Menu extends javax.swing.JFrame {
    DefaultTableModel modelo;
    ConexaoDB conexao = new ConexaoDB();
    ResultSet rs;
    
    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        conexao.coneta();
        modelo = (DefaultTableModel) jTable1.getModel();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton20 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton23 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton24 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton25 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButton26 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jButton27 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jButton28 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jButton29 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jButton40 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButton31 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jButton30 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jButton32 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jButton33 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton34 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jButton35 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jButton36 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jButton37 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jButton38 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jButton39 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Menu");

        jTabbedPane1.setBackground(new java.awt.Color(102, 102, 102));

        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/1.jpg"))); // NOI18N
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel4.setText("Gambas Fritas");

        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/2.jpg"))); // NOI18N
        jButton21.setText("jButton21");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/3.jpg"))); // NOI18N
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel6.setText("Lapas");

        jButton23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/4.jpg"))); // NOI18N
        jButton23.setText("jButton23");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel8.setText("Cocktail de marisco");

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel9.setText("Ostras");

        jButton24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/5.jpg"))); // NOI18N
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel7.setText("Salmão Fumado");

        jButton25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/6.jpg"))); // NOI18N
        jButton25.setText("jButton25");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel10.setText("Ameijoas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(39, 39, 39)
                                    .addComponent(jLabel4))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(jLabel6)
                                .addGap(193, 193, 193)
                                .addComponent(jLabel9))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel8)
                        .addGap(131, 131, 131)
                        .addComponent(jLabel7)
                        .addGap(162, 162, 162)
                        .addComponent(jLabel10)))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10))
                .addContainerGap(516, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Entradas", jPanel1);

        jButton26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/7.jpg"))); // NOI18N
        jButton26.setMaximumSize(new java.awt.Dimension(433, 263));
        jButton26.setMinimumSize(new java.awt.Dimension(433, 263));
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel11.setText("Sorbet de limão");

        jButton27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/9.jpg"))); // NOI18N
        jButton27.setText("jButton27");
        jButton27.setMaximumSize(new java.awt.Dimension(433, 263));
        jButton27.setMinimumSize(new java.awt.Dimension(433, 263));
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel12.setText("Pudim flan");

        jButton28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/8.jpg"))); // NOI18N
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel13.setText("Cheesecake");

        jButton29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/11.jpg"))); // NOI18N
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel14.setText("Mousse de chocolate");

        jButton40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/55.jpg"))); // NOI18N
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel26.setText("Café");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel11)
                        .addGap(153, 153, 153)
                        .addComponent(jLabel12)
                        .addGap(200, 200, 200)
                        .addComponent(jLabel26))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(218, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jLabel13)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(129, 129, 129))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel26))))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addContainerGap(505, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sobremesa", jPanel6);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/super-bock-1-logo-primary.jpg"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Imagem_Adega_de_Borba_Tinto_Pagina.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/6060062_2_gh.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Murganheira.gif"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/8769437.jpg"))); // NOI18N
        jButton6.setText("jButton6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/v_muralhasMoncaoBranco.jpg"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/casal-garcia-1l-gargantilha-230.jpg"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Coca-Cola_Coke2.png"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Lipton Ice Tea.jpg"))); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/images (1).jpg"))); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/sumol-sozinho.png"))); // NOI18N
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/xmsImg.jpg"))); // NOI18N
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/share.jpg"))); // NOI18N
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/download.jpg"))); // NOI18N
        jButton15.setText("jButton15");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/download (1).jpg"))); // NOI18N
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton8))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(62, 62, 62)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Bebidas", jPanel2);

        jButton31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/22.jpg"))); // NOI18N
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel15.setText("Bifinhos com cogumelos");

        jButton30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/23.JPG"))); // NOI18N
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel16.setText("Bitoque");

        jButton32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/24.jpg"))); // NOI18N
        jButton32.setText("jButton32");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel17.setText("Plumas de porco");

        jButton33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/26.jpg"))); // NOI18N
        jButton33.setText("jButton33");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel18.setText("Posta mirandesa");

        jLabel19.setText("Acompanhamentos: Batata frita, arroz e salada");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel17)
                        .addGap(218, 218, 218)
                        .addComponent(jLabel18))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton33, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel19))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel15)
                        .addGap(215, 215, 215)
                        .addComponent(jLabel16)))
                .addContainerGap(268, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addGap(29, 29, 29)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton33, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addGap(88, 88, 88)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(339, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Carne", jPanel5);

        jButton34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/30.jpg"))); // NOI18N
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel20.setText("Bacalhau á Lagareiro");

        jButton35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/31.jpg"))); // NOI18N
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel21.setText("Dourada grelhada");

        jButton36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/32.jpg"))); // NOI18N
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel22.setText("Filetes de peixe");

        jButton37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/33.jpg"))); // NOI18N
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel23.setText("Lulas grelhadas");

        jButton38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/35.jpg"))); // NOI18N
        jButton38.setText("jButton38");
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel24.setText("Arroz de marisco");

        jButton39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/37.jpg"))); // NOI18N
        jButton39.setText("jButton39");
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel25.setText("Feijoada de marisco");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jLabel20)
                .addGap(178, 178, 178)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addGap(122, 122, 122))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton37, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton34, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton38, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton36, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton39, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel24)
                .addGap(172, 172, 172)
                .addComponent(jLabel25)
                .addGap(81, 81, 81))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton36, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton34, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton39, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton38, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton37, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel25)
                        .addComponent(jLabel24))
                    .addComponent(jLabel23))
                .addContainerGap(510, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Peixe", jPanel4);

        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/13.jpg"))); // NOI18N
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Sopa_legumes.jpg"))); // NOI18N
        jButton19.setText("jButton19");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel2.setText("Sopa de Marisco");

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel3.setText("Sopa de legumes");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(173, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(238, 238, 238))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap(704, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sopas", jPanel3);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descrição", "Quantidade", "Preço"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Total:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/images (3)123.jpg"))); // NOI18N

        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/images.jpg"))); // NOI18N
        jButton17.setText("jButton17");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/paper.png"))); // NOI18N
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButton42, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 507, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton42, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String nome="Super Bock";
        double preco=2;
        int validacao=0;
        int quantidade=1;
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2);  
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, jTable1.getRowCount(), 2);
}
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nome="Adega da Borga";
        double preco=5;
        int validacao=0;
        int quantidade=1;
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, jTable1.getRowCount(), 2);
}
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       String nome="Cabeça de Burro";
        double preco=6;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      String nome="Murganheira";
        double preco=15;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String nome="Mateus";
        double preco=7.;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
       String nome="Muralhas";
        double preco=8;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       String nome="Casal Garcia";
        double preco=7;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
       String nome="Coca-Cola";
        double preco=1.50;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
      String nome="Ice Tea";
        double preco=1.50;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
      String nome="7up";
        double preco=1.50;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
       String nome="Sumol";
        double preco=1.50;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
       String nome="Água";
        double preco=1.00;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
       String nome="Guaraná";
        double preco=1.50;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
       String nome="Fanta";
        double preco=1.50;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
     String nome="Compal";
        double preco=1.50;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        int r = jTable1.getSelectedRow();
        if (jTable1.getRowCount()!=0) {
            if (Integer.parseInt(jTable1.getValueAt(r, 1).toString())==1) {
               modelo.removeRow(r);
           } else {
               modelo.setValueAt(Integer.parseInt(jTable1.getValueAt(r, 1).toString())-1, r, 1);
           } 
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
         String nome="Sopa de Marisco";
        double preco=2.50;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
            String nome="Sopa de Legumes";
        double preco=1.50;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
           String nome="Plumas de Porco Dose";
        double preco=12;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
           String nome="Posta Mirandesa Dose";
        double preco=12;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        String nome="Gambas Fritas";
        double preco=7;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
       String nome="Lapas";
        double preco=5;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        String nome="Ostras";
        double preco=7.5;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
       String nome="Salmão Fumado";
        double preco=7.5;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        String nome="Ameijoas";
        double preco=6;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        String nome="Cocktail de Marisco";
        double preco=5;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        String nome="Sorbet de Limão";
        double preco=2;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
       String nome="Pudim Flan";
        double preco=1.5;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        String nome="Cheesecake";
        double preco=1.5;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        String nome="Mousse de Chocolate";
        double preco=2;// preco tem de ter valor , secalhar obtido da base de dados mas este ta aqui para teste
        int validacao=0;
        int quantidade=1;//quantidade é importante manter em runtime para poderes multiplicar pelo preço
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
               modelo.setValueAt(preco, 0, 2); //trata-se da 1 vez que a linha entra na lista o preço tem quantidade 1 
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    quantidade=Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1;
                    modelo.setValueAt(quantidade, i, 1);
                    modelo.setValueAt(preco*quantidade, i, 2);//actualiza o preço consoante as quantidades que adicionamos
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
                modelo.setValueAt(preco, 0, 2);// tambem se trata da 1 vez que a linha entra na lista o preço tem quantidade 1 
            }
        }
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
       String nome="Bifinhos com Cogumelos";
        int validacao=0;
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    modelo.setValueAt(Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1, i, 1);
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
            }
        }
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        String nome="Bitoque";
        int validacao=0;
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    modelo.setValueAt(Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1, i, 1);
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
            }
        }
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        String nome="Bacalhau á Lagareiro";
        int validacao=0;
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    modelo.setValueAt(Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1, i, 1);
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
            }
        }
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
       String nome="Dourada Grelhada";
        int validacao=0;
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    modelo.setValueAt(Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1, i, 1);
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
            }
        }
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
      String nome="Filetes de Peixe";
        int validacao=0;
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    modelo.setValueAt(Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1, i, 1);
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
            }
        }
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton37ActionPerformed
       String nome="Lulas Grelhadas";
        int validacao=0;
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    modelo.setValueAt(Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1, i, 1);
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
            }
        }
    }//GEN-LAST:event_jButton37ActionPerformed

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
        String nome="Arroz de Marisco";
        int validacao=0;
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    modelo.setValueAt(Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1, i, 1);
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
            }
        }
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
       String nome="Feijoada de Marisco";
        int validacao=0;
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    modelo.setValueAt(Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1, i, 1);
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
            }
        }
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        String nome="Café";
        int validacao=0;
        if (jTable1.getRowCount()==0) {
            modelo.addRow(new Object[]{nome,1});
        }
        else {
            for (int i=0;i<jTable1.getRowCount();i++) {
                if (jTable1.getValueAt(i, 0).toString().equals(nome)) {
                    modelo.setValueAt(Integer.parseInt(jTable1.getValueAt(i, 1).toString())+1, i, 1);
                    validacao=1;
                } 
            }
            if (validacao==0) {
                modelo.addRow(new Object[]{nome,1});
            }
        }
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
       Factura frame=new Factura();
       frame.setVisible (true);
    }//GEN-LAST:event_jButton42ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
